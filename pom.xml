<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nablarch.archetype</groupId>
        <artifactId>nablarch-archetype-parent</artifactId>
        <version>5u13</version>
    </parent>

    <groupId>com.nablarch.example</groupId>
    <artifactId>nablarch-example-http-messaging</artifactId>
    <version>5u13</version>
    <packaging>war</packaging>

    <properties>
        <!-- override nablarch-archetype-parent -->
        <java.version>1.8</java.version>

        <!-- this project -->
        <db.schema>PUBLIC</db.schema>
        <db.dmpFile>http_messaging_example.sql</db.dmpFile>
        <db.user>HTTP_MESSAGING_EXAMPLE</db.user>
        <db.password>HTTP_MESSAGING_EXAMPLE</db.password>
        <db.jdbcDriver>org.h2.Driver</db.jdbcDriver>
        <db.url>jdbc:h2:./h2/db/http_messaging_example</db.url>
        <db.adminUser>HTTP_MESSAGING_EXAMPLE</db.adminUser>
        <db.adminPassword>HTTP_MESSAGING_EXAMPLE</db.adminPassword>
        <db.testDataArtifactId>${project.artifactId}-testdata</db.testDataArtifactId>

        <dba.erdFile>src/main/resources/entity/data-model.edm</dba.erdFile>
        <dba.entity.rootPackage>nablarch.example</dba.entity.rootPackage>
        <dba.entity.entityPackage>entity</dba.entity.entityPackage>
        <dba.entity.javaFileDestDir>target/generated-sources/entity</dba.entity.javaFileDestDir>
    </properties>

    <!--
      このプロファイルは環境を指定するものであり、相互に排他的である。
      複数のプロファイルを同時に指定してはならない。
    -->
    <profiles>
        <profile>
            <id>dba</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>jp.co.tis.gsp</groupId>
                        <artifactId>gsp-dba-maven-plugin</artifactId>
                        <configuration>
                            <dataDirectory>src/test/resources/data</dataDirectory>
                            <erdFile>${dba.erdFile}</erdFile>
                            <lengthSemantics>CHAR</lengthSemantics>
                            <rootPackage>${dba.entity.rootPackage}</rootPackage>
                            <entityPackageName>${dba.entity.entityPackage}</entityPackageName>
                            <useAccessor>true</useAccessor>
                            <javaFileDestDir>${dba.entity.javaFileDestDir}</javaFileDestDir>
                        </configuration>
                        <executions>
                            <!--  DDLをObjectBrowserERから生成する  -->
                            <execution>
                                <id>generate-ddl</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate-ddl</goal>
                                </goals>
                            </execution>
                            <!--  DDLを実行する  -->
                            <execution>
                                <id>execute-ddl</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>execute-ddl</goal>
                                </goals>
                            </execution>
                            <!--  Entityを生成する  -->
                            <execution>
                                <id>generate-entity</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate-entity</goal>
                                </goals>
                            </execution>
                            <!-- リクエスト単体テストで投入されたデータをクリアする  -->
                            <execution>
                                <id>execute-ddl-pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute-ddl</goal>
                                </goals>
                            </execution>
                            <!--  データをロードする  -->
                            <execution>

                                <id>load-data</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>load-data</goal>
                                </goals>
                            </execution>
                            <!--  ダンプを作る  -->
                            <execution>
                                <id>export-schema</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>export-schema</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-testdata</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <configuration>
                                    <file>gsp-target/output/${db.testDataArtifactId}-${project.version}.jar</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${db.testDataArtifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <packaging>jar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-testdata</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy-file</goal>
                                </goals>
                                <configuration>
                                    <file>${project.build.directory}/dump/${db.testDataArtifactId}-${project.version}.jar</file>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${db.testDataArtifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                                    <url>${project.distributionManagement.repository.url}</url>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
          </profile>
          <profile>
            <id>dev-deploy</id>
            <distributionManagement>
              <site>
                <id>dev-deploy</id>
                <url>${develop_test_report_url}</url>
              </site>
            </distributionManagement>
          </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.nablarch.profile</groupId>
                <artifactId>nablarch-bom</artifactId>
                <version>5u13</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>com.nablarch.profile</groupId>
            <artifactId>nablarch-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nablarch.framework</groupId>
            <artifactId>nablarch-fw-messaging-http</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nablarch.configuration</groupId>
            <artifactId>nablarch-main-default-configuration</artifactId>
        </dependency>

        <!-- ホットデプロイ用 -->
        <dependency>
            <groupId>com.nablarch.framework</groupId>
            <artifactId>nablarch-fw-web-hotdeploy</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <version>2.3.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
            <version>1.2.1</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.192</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.3.Final</version>
        </dependency>

        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jpa_2.0_spec</artifactId>
        </dependency>

        <!-- テスト用 -->
        <dependency>
            <groupId>com.nablarch.framework</groupId>
            <artifactId>nablarch-testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.nablarch.configuration</groupId>
            <artifactId>nablarch-testing-default-configuration</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.nablarch.framework</groupId>
            <artifactId>nablarch-fw-messaging-mom</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- テスト用のクライアント作成に使用する -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.7.2</version>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.22.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.22.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.sql</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>jp.co.tis.gsp</groupId>
                <artifactId>gsp-dba-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- MANIFEST.MFでClass-Pathを指定すると、依存jar内で定義されているtaglibのuriを正しく解決してくれない。 -->
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.unit8.waitt</groupId>
                <artifactId>waitt-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <port>9080</port>
                    <servers>
                        <server>
                            <groupId>net.unit8.waitt.server</groupId>
                            <artifactId>waitt-tomcat8</artifactId>
                            <version>1.2.1</version>
                        </server>
                    </servers>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <!-- ================ここから任意で使用するツールの設定================ -->
            <!-- レポーティング用のプラグインを追加 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- MANIFEST.MFでClass-Pathを指定すると、依存jar内で定義されているtaglibのuriを正しく解決してくれない。 -->
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                </configuration>
            </plugin>
            <!-- カバレッジ取得 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <!-- 0.7.3以降のJaCoCoではリクエスト単体テストのカバレッジを計測できない。
                  Jenkinsとの連携にはJaCoCoプラグインの1系を使用する(2系はJaCoCo0.7.4以降が必須) -->
                <configuration>
                    <excludes>
                        <exclude>**/com/nablarch/example/app/entity/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- 自動生成されたEntityをビルド対象に組み込む -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>jp.co.tis.gsp</groupId>
                    <artifactId>gsp-dba-maven-plugin</artifactId>
                    <version>${version.plugins.gsp.dba}</version>
                    <configuration>
                        <driver>${db.jdbcDriver}</driver>
                        <url>${db.url}</url>
                        <adminUser>${db.adminUser}</adminUser>
                        <adminPassword>${db.adminPassword}</adminPassword>
                        <user>${db.user}</user>
                        <password>${db.password}</password>
                        <schema>${db.schema}</schema>
                        <dmpFile>${db.dmpFile}</dmpFile>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>1.4.192</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <extensions>
          <extension>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-webdav-jackrabbit</artifactId>
            <version>3.0.0</version>
          </extension>
        </extensions>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-report-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <additionalparam>-Xdoclint:none</additionalparam>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </reporting>
</project>
